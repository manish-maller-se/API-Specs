{
	"info": {
		"_postman_id": "d23a9bee-08cc-484a-8329-2bd308fff69a",
		"name": "Utility Metering Data Access - Internal API",
		"description": "\n# Overview\n\nThis API has been designed for Schneider Electric internal use to handle multiple utility providers that are relevant to EcoStruxure products.\n\nAt present, the API provides access to electricity consumption data from Enedis Linky meters. The aim is to provide other utility provider data like gas, for as many countries as possible.\n\nTo request the addition of more data sources, contact ecostruxure.openness@se.com.\n\n## API overview and usage\n\nThe API currently supports following.\n\n|Utility Type|Provider|Country|Features|\n|---------|--------|-------|--------|\n|Electricity|Enedis|France|**Domestic**<br><br><li>Get consent* from Enedis users for access to their Linky meter data.</li><li>List the meters available from energy provider.</li><li> Get the daily energy consumption data for a given meter.</li><br><br>**Commercial**<br><br><li> Register an authorization from a customer.</li><li> Retrieve registered authorization for a customer.</li><li> Register for set of measurement for a customer from a utility provider.</li><li> List all data requests made with utility provider for a customer.</li><li> Retrieve a data request made with utility provider for a customer.</li>|\n\n\n# Documentation\n    \n## How to sign up\n    \nThis is an internal API product. Please contact ecostruxure.openness@se.com for access.\n\n## Authentication guide\n\nThe API is meant for Schneider Electric internal applications, however the data retrieved from third party providers are in the context of Schneider Electric customer. Hence Schneider Electric application must generate a token per customer using one of following steps to invoke data APIs.\n\n### Schneider Electric application integrated with cIAM\n\nIf the Schneider Electric application is integrated with cIAM, application will already have access to cIAM id_token. Schneider Electric application can exchange this id_token for API access token using `Exchange cIAM id_token` operation. CURL example below. This way the token generated is associated with the cIAM identity, the consent provided by the user will be stored against the cIAM identity.\n\n```shell\ncurl -X POST 'https://api.exchange.se.com/ecostruxure/v1/oauth/token' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'id_token=base64encodedidtokenfromciam' \\\n--data-urlencode 'grant_type=id_token' \\\n--data-urlencode 'client_id=abcdeff' \\\n--data-urlencode 'client_secret=******'\n```\n\n### Schneider Electric application not integrated with cIAM\n\nIf the Schneider Electric application is not integrated with cIAM, application can generate an access token using `Impersonate an user` operation. CURL example below. This way the token generated is associated with the cIAM identity, the consent provided by the user will be stored against the cIAM identity.\n\n```shell\ncurl -X POST 'https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'email=john.doe@yopmail.com' \\\n--data-urlencode 'grant_type=user_token' \\\n--data-urlencode 'client_id=abcdeff' \\\n--data-urlencode 'client_secret=******'\n```\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Code Samples\n\nYou can leverage the code samples provided to integrate the API faster in your application.\n\n* ### <a href=\"https://github.com/ecostruxure-openapi/utility-provider/tree/main/code_samples/postman_collections\" target=\"_blank\">Postman Collection</a>\n\n\n## Support\n\nContact the SE Exchange support team at exchange.support@se.com and include:\n* Endpoint URL\n* Request/Response\n* Any additional information like Screenshots, Postman collections.\n\n## Release Notes\n\n|version|Notes|\n|-------|-----|\n|1.2.0|API enhancements to request load curve production data from Enedis.|\n|1.1.0|Enedis SGE Tier integration. Provides support to request data for commercial sites in France.|\n|1.0.0|Initial version|\n\nContact Support:\n Name: Schneider Electric\n Email: exchange.support@se.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34682654"
	},
	"item": [
		{
			"name": "oauth",
			"item": [
				{
					"name": "token",
					"item": [
						{
							"name": "Exchange cIAM id_token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "id_token",
											"description": "(Required) grant type of the token"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) consumer key of the API product"
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": "(Required) consumer secret of the API product"
										},
										{
											"key": "id_token",
											"value": "<string>",
											"description": "(Required) Base64 encoded CIAM ID token."
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "scope of the API resource. separate with space if more than one scope is requested"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth",
										"token"
									]
								},
								"description": "OAuth id_token grant type is a security schema that is used by internal systems or applications of Schneider Electric to exchange cIAM id_token for API access token."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\"\n}"
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "oauth-impersonate",
			"item": [
				{
					"name": "token",
					"item": [
						{
							"name": "OAuth User Impersonation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "user_token",
											"description": "(Required) grant type of the token"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) consumer key of the API product"
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": "(Required) consumer secret of the API product"
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "(Required) email id of the user"
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "scope of the API resource. separate with space if more than one scope is requested"
										},
										{
											"key": "federatedId",
											"value": "<string>",
											"description": "unique user identifier in ciam"
										},
										{
											"key": "companyFederationId",
											"value": "<string>",
											"description": "unique company identifier ciam"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-impersonate/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-impersonate",
										"token"
									]
								},
								"description": "Oauth Impersonation is a security schema that is used by internal systems or applications of Schneider Electric which do not use cIAM as an identity provider for authenticating the users to access data. This is a custom-built security schema which uses the combination of apiKey and client credentials grant in order to issue the access token."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-impersonate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\"\n}"
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-impersonate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-impersonate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-impersonate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "energy-providers",
			"item": [
				{
					"name": "{providerName}",
					"item": [
						{
							"name": "authorize",
							"item": [
								{
									"name": "Get consent",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/energy-providers/:providerName/authorize?redirectUrl=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"energy-providers",
												":providerName",
												"authorize"
											],
											"query": [
												{
													"key": "redirectUrl",
													"value": "<string>",
													"description": "(Required) Application URL to load after user provides the consent."
												}
											],
											"variable": [
												{
													"key": "providerName",
													"value": "Enedis",
													"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
												}
											]
										},
										"description": "Get customer consent to read consumption related data from an energy provider."
									},
									"response": [
										{
											"name": "Consent already provided by customer.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorize?redirectUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorize"
													],
													"query": [
														{
															"key": "redirectUrl",
															"value": "<string>",
															"description": "(Required) Application URL to load after user provides the consent."
														}
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorize?redirectUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorize"
													],
													"query": [
														{
															"key": "redirectUrl",
															"value": "<string>",
															"description": "(Required) Application URL to load after user provides the consent."
														}
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Found",
											"code": 302,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorize?redirectUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorize"
													],
													"query": [
														{
															"key": "redirectUrl",
															"value": "<string>",
															"description": "(Required) Application URL to load after user provides the consent."
														}
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorize?redirectUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorize"
													],
													"query": [
														{
															"key": "redirectUrl",
															"value": "<string>",
															"description": "(Required) Application URL to load after user provides the consent."
														}
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorize?redirectUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorize"
													],
													"query": [
														{
															"key": "redirectUrl",
															"value": "<string>",
															"description": "(Required) Application URL to load after user provides the consent."
														}
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "meters",
							"item": [
								{
									"name": "{meterId}",
									"item": [
										{
											"name": "daily-consumption",
											"item": [
												{
													"name": "Get daily consumption",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/energy-providers/:providerName/meters/:meterId/daily-consumption?startDate=<string>&endDate=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"energy-providers",
																":providerName",
																"meters",
																":meterId",
																"daily-consumption"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "<string>",
																	"description": "(Required) Start date of the meter reading."
																},
																{
																	"key": "endDate",
																	"value": "<string>",
																	"description": "(Required) End date till when the meter readings to be retrieved."
																}
															],
															"variable": [
																{
																	"key": "providerName",
																	"value": "Enedis",
																	"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
																},
																{
																	"key": "meterId",
																	"value": "<string>",
																	"description": "(Required) Meter id from which consumption details are retrieved. Use get meters APIs to list available meters for the customer."
																}
															]
														},
														"description": "Get daily consumption details from an energy provider."
													},
													"response": [
														{
															"name": "Found energy consumption data",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/energy-providers/:providerName/meters/:meterId/daily-consumption?startDate=<string>&endDate=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"energy-providers",
																		":providerName",
																		"meters",
																		":meterId",
																		"daily-consumption"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "<string>",
																			"description": "(Required) Start date of the meter reading."
																		},
																		{
																			"key": "endDate",
																			"value": "<string>",
																			"description": "(Required) End date till when the meter readings to be retrieved."
																		}
																	],
																	"variable": [
																		{
																			"key": "providerName"
																		},
																		{
																			"key": "meterId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"key\": \"<string>\",\n  \"values\": [\n    {\n      \"date\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"value\": \"<number>\"\n    },\n    {\n      \"date\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"value\": \"<number>\"\n    }\n  ]\n}"
														},
														{
															"name": "Invalid input",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/energy-providers/:providerName/meters/:meterId/daily-consumption?startDate=<string>&endDate=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"energy-providers",
																		":providerName",
																		"meters",
																		":meterId",
																		"daily-consumption"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "<string>",
																			"description": "(Required) Start date of the meter reading."
																		},
																		{
																			"key": "endDate",
																			"value": "<string>",
																			"description": "(Required) End date till when the meter readings to be retrieved."
																		}
																	],
																	"variable": [
																		{
																			"key": "providerName"
																		},
																		{
																			"key": "meterId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/energy-providers/:providerName/meters/:meterId/daily-consumption?startDate=<string>&endDate=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"energy-providers",
																		":providerName",
																		"meters",
																		":meterId",
																		"daily-consumption"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "<string>",
																			"description": "(Required) Start date of the meter reading."
																		},
																		{
																			"key": "endDate",
																			"value": "<string>",
																			"description": "(Required) End date till when the meter readings to be retrieved."
																		}
																	],
																	"variable": [
																		{
																			"key": "providerName"
																		},
																		{
																			"key": "meterId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/energy-providers/:providerName/meters/:meterId/daily-consumption?startDate=<string>&endDate=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"energy-providers",
																		":providerName",
																		"meters",
																		":meterId",
																		"daily-consumption"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "<string>",
																			"description": "(Required) Start date of the meter reading."
																		},
																		{
																			"key": "endDate",
																			"value": "<string>",
																			"description": "(Required) End date till when the meter readings to be retrieved."
																		}
																	],
																	"variable": [
																		{
																			"key": "providerName"
																		},
																		{
																			"key": "meterId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "List available meters",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/energy-providers/:providerName/meters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"energy-providers",
												":providerName",
												"meters"
											],
											"variable": [
												{
													"key": "providerName",
													"value": "Enedis",
													"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
												}
											]
										},
										"description": "List available meters for the customer from an energy provider."
									},
									"response": [
										{
											"name": "Found meters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/meters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"meters"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"gatewayId\": \"<string>\",\n    \"commodity\": \"<string>\",\n    \"usage\": \"<string>\",\n    \"measurements\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"unit\": \"<string>\",\n        \"timeseries\": {\n          \"key\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"unit\": \"<string>\",\n        \"timeseries\": {\n          \"key\": \"<string>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"gatewayId\": \"<string>\",\n    \"commodity\": \"<string>\",\n    \"usage\": \"<string>\",\n    \"measurements\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"unit\": \"<string>\",\n        \"timeseries\": {\n          \"key\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"unit\": \"<string>\",\n        \"timeseries\": {\n          \"key\": \"<string>\"\n        }\n      }\n    ]\n  }\n]"
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/meters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"meters"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/meters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"meters"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/meters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"meters"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "authorizations",
							"item": [
								{
									"name": "Register Authorization",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"authorizer\": {\n    \"email\": \"<email>\",\n    \"companyName\": \"<string>\",\n    \"address\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateCode\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    },\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"companyType\": \"Private\",\n    \"tradeName\": \"<string>\",\n    \"companyId\": \"<string>\"\n  },\n  \"authorizedSites\": [\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PENDING\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"energy-providers",
												":providerName",
												"authorizations"
											],
											"variable": [
												{
													"key": "providerName",
													"value": "Enedis",
													"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
												}
											]
										},
										"description": "Register an authorization from a customer."
									},
									"response": [
										{
											"name": "Authorizations provided by the customer.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"authorizer\": {\n    \"email\": \"<email>\",\n    \"companyName\": \"<string>\",\n    \"address\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateCode\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    },\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"companyType\": \"Private\",\n    \"tradeName\": \"<string>\",\n    \"companyId\": \"<string>\"\n  },\n  \"authorizedSites\": [\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PENDING\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorizations"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"authorizer\": {\n    \"email\": \"<email>\",\n    \"companyName\": \"<string>\",\n    \"address\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateCode\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    },\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"companyType\": \"Private\",\n    \"tradeName\": \"<string>\",\n    \"companyId\": \"<string>\"\n  },\n  \"authorizedSites\": [\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PENDING\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"authorizer\": {\n    \"email\": \"<email>\",\n    \"companyName\": \"<string>\",\n    \"address\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateCode\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    },\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"companyType\": \"Private\",\n    \"tradeName\": \"<string>\",\n    \"companyId\": \"<string>\"\n  },\n  \"authorizedSites\": [\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PENDING\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorizations"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"authorizer\": {\n    \"email\": \"<email>\",\n    \"companyName\": \"<string>\",\n    \"address\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateCode\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    },\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"companyType\": \"Private\",\n    \"tradeName\": \"<string>\",\n    \"companyId\": \"<string>\"\n  },\n  \"authorizedSites\": [\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"siteName\": \"<string>\",\n      \"pointReference\": \"<string>\",\n      \"siteAddress\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"companyId\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PENDING\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorizations"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Authorizations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"energy-providers",
												":providerName",
												"authorizations"
											],
											"variable": [
												{
													"key": "providerName",
													"value": "Enedis",
													"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
												}
											]
										},
										"description": "Retrieve registered authorization for a customer. The response includes list of meter points authorized and its status."
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorizations"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"startDate\": \"<date>\",\n    \"endDate\": \"<date>\",\n    \"authorizer\": {\n      \"email\": \"<email>\",\n      \"companyName\": \"<string>\",\n      \"address\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"companyType\": \"Public\",\n      \"tradeName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    \"authorizedSites\": [\n      {\n        \"siteName\": \"<string>\",\n        \"pointReference\": \"<string>\",\n        \"siteAddress\": {\n          \"address\": \"<string>\",\n          \"city\": \"<string>\",\n          \"countryIsoCode\": \"<string>\",\n          \"zipCode\": \"<string>\",\n          \"stateCode\": \"<string>\",\n          \"timezone\": \"<string>\",\n          \"coordinates\": {\n            \"latitude\": \"<number>\",\n            \"longitude\": \"<number>\",\n            \"elevation\": \"<number>\"\n          }\n        },\n        \"companyId\": \"<string>\"\n      },\n      {\n        \"siteName\": \"<string>\",\n        \"pointReference\": \"<string>\",\n        \"siteAddress\": {\n          \"address\": \"<string>\",\n          \"city\": \"<string>\",\n          \"countryIsoCode\": \"<string>\",\n          \"zipCode\": \"<string>\",\n          \"stateCode\": \"<string>\",\n          \"timezone\": \"<string>\",\n          \"coordinates\": {\n            \"latitude\": \"<number>\",\n            \"longitude\": \"<number>\",\n            \"elevation\": \"<number>\"\n          }\n        },\n        \"companyId\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\",\n    \"status\": \"SIGNED\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"startDate\": \"<date>\",\n    \"endDate\": \"<date>\",\n    \"authorizer\": {\n      \"email\": \"<email>\",\n      \"companyName\": \"<string>\",\n      \"address\": {\n        \"address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"countryIsoCode\": \"<string>\",\n        \"zipCode\": \"<string>\",\n        \"stateCode\": \"<string>\",\n        \"timezone\": \"<string>\",\n        \"coordinates\": {\n          \"latitude\": \"<number>\",\n          \"longitude\": \"<number>\",\n          \"elevation\": \"<number>\"\n        }\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"companyType\": \"Private\",\n      \"tradeName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    \"authorizedSites\": [\n      {\n        \"siteName\": \"<string>\",\n        \"pointReference\": \"<string>\",\n        \"siteAddress\": {\n          \"address\": \"<string>\",\n          \"city\": \"<string>\",\n          \"countryIsoCode\": \"<string>\",\n          \"zipCode\": \"<string>\",\n          \"stateCode\": \"<string>\",\n          \"timezone\": \"<string>\",\n          \"coordinates\": {\n            \"latitude\": \"<number>\",\n            \"longitude\": \"<number>\",\n            \"elevation\": \"<number>\"\n          }\n        },\n        \"companyId\": \"<string>\"\n      },\n      {\n        \"siteName\": \"<string>\",\n        \"pointReference\": \"<string>\",\n        \"siteAddress\": {\n          \"address\": \"<string>\",\n          \"city\": \"<string>\",\n          \"countryIsoCode\": \"<string>\",\n          \"zipCode\": \"<string>\",\n          \"stateCode\": \"<string>\",\n          \"timezone\": \"<string>\",\n          \"coordinates\": {\n            \"latitude\": \"<number>\",\n            \"longitude\": \"<number>\",\n            \"elevation\": \"<number>\"\n          }\n        },\n        \"companyId\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\",\n    \"status\": \"SIGNED\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorizations"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/authorizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"authorizations"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "data-requests",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get data request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests",
														":id"
													],
													"variable": [
														{
															"key": "providerName",
															"value": "Enedis",
															"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Data request id."
														}
													]
												},
												"description": "Retrieve a data request made with utility provider for a customer. The list of measurements along with its status is returned."
											},
											"response": [
												{
													"name": "Success.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"energy-providers",
																":providerName",
																"data-requests",
																":id"
															],
															"variable": [
																{
																	"key": "providerName"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"measurements\": [\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE_PRODUCTION\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"FAILED\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"INACTIVE\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PROCESSED\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
												},
												{
													"name": "Invalid input",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"energy-providers",
																":providerName",
																"data-requests",
																":id"
															],
															"variable": [
																{
																	"key": "providerName"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"energy-providers",
																":providerName",
																"data-requests",
																":id"
															],
															"variable": [
																{
																	"key": "providerName"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Register data request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"measurements\": [\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE_PRODUCTION\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"FAILED\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"INACTIVE\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PROCESSED\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"energy-providers",
												":providerName",
												"data-requests"
											],
											"variable": [
												{
													"key": "providerName",
													"value": "Enedis",
													"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
												}
											]
										},
										"description": "Register for set of measurement for a customer from a utility provider."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"measurements\": [\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE_PRODUCTION\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"FAILED\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"INACTIVE\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PROCESSED\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"measurements\": [\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE_PRODUCTION\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"FAILED\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"INACTIVE\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PROCESSED\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"measurements\": [\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE_PRODUCTION\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"FAILED\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"INACTIVE\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PROCESSED\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"measurements\": [\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE_PRODUCTION\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"FAILED\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"pointReference\": \"<string>\",\n      \"type\": \"LOADCURVE\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"status\": \"INACTIVE\",\n      \"error\": {\n        \"code\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ],\n  \"id\": \"<string>\",\n  \"status\": \"PROCESSED\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "List data requests",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"energy-providers",
												":providerName",
												"data-requests"
											],
											"variable": [
												{
													"key": "providerName",
													"value": "Enedis",
													"description": "(Required) Energy provider name. Please check API documentation for supported energy providers."
												}
											]
										},
										"description": "List all data requests made with utility provider for a customer. The list of measurements along with its status is returned."
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"measurements\": [\n      {\n        \"pointReference\": \"<string>\",\n        \"type\": \"LOADCURVE_PRODUCTION\",\n        \"startDate\": \"<date>\",\n        \"endDate\": \"<date>\",\n        \"status\": \"ACTIVE\",\n        \"error\": {\n          \"code\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      },\n      {\n        \"pointReference\": \"<string>\",\n        \"type\": \"LOADCURVE_PRODUCTION\",\n        \"startDate\": \"<date>\",\n        \"endDate\": \"<date>\",\n        \"status\": \"FAILED\",\n        \"error\": {\n          \"code\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      }\n    ],\n    \"id\": \"<string>\",\n    \"status\": \"PROCESSED\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"measurements\": [\n      {\n        \"pointReference\": \"<string>\",\n        \"type\": \"LOADCURVE\",\n        \"startDate\": \"<date>\",\n        \"endDate\": \"<date>\",\n        \"status\": \"INACTIVE\",\n        \"error\": {\n          \"code\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      },\n      {\n        \"pointReference\": \"<string>\",\n        \"type\": \"LOADCURVE_PRODUCTION\",\n        \"startDate\": \"<date>\",\n        \"endDate\": \"<date>\",\n        \"status\": \"FAILED\",\n        \"error\": {\n          \"code\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      }\n    ],\n    \"id\": \"<string>\",\n    \"status\": \"PROCESSED\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"path\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/energy-providers/:providerName/data-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"energy-providers",
														":providerName",
														"data-requests"
													],
													"variable": [
														{
															"key": "providerName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dev.api.exchange.se.app/ecostruxure/v1"
		}
	]
}