{
	"info": {
		"_postman_id": "4b0e4629-23d5-4ed2-b1ca-9ba2c4052793",
		"name": "District Energy Thermal Load Forecasting - Internal API",
		"description": "# Overview\n\nDistrict Energy Thermal Load Forecasting API will ingress raw data from a Site and return Thermal Load Forecast for the site. It is designed to complement District Energy SE Software offer for district heating and cooling networks relying on hydraulic and thermodynamic simulation for Tp°, pressure and flow to serve a given thermal energy demand.\n\nTo request for access, contact ecostruxure.openness@se.com.\n\n## API overview and usage\n\nThe API currently supports following.\n\n- **Send Raw Data:** Receive the raw data from the site every 6 hours in a day.\n    - The last 24 hours data of power, supply and return temperatures, flow, real outside temperature (and optional: real solar radiation, wind speed, wind direction, trade winds and relative humidity (if available for the given location)) in a zone.\n    - A weather forecast data including outside temperature (and optional: real solar radiation, wind speed, wind direction, trade winds and relative humidity (if available for the given location)) for the forecasted period (72 hours) in the zone.\n\n- **Fetch Forecast Results:** Calcuate the forecast from raw data and gives back the results to the site.\n    - The consumption forecast is then used as an input for the temperature optimization module already existing in EcoStruxure District Energy.\n\n## Hands on Application\nTraditionnally, energy demand for the coming period is -most of the time- estimated from:\n1) pre-defined consumption patterns of buildings\n2) calculated heat losses of the network\n\n![image](https://media.github.schneider-electric.com/user/8672/files/9c0397e6-8f9c-471e-8015-0f9ef9c8c022)\n\n\n\nThe approach of this API is to forecast the global energy demand of each zone, relying on past observations, weather forecast and calendar information:\n- A 24h horizon thermal demand forecast enables to save energy by avoiding too high margins for heat production \n- A 72h horizon forecast enables to buy the needed quantity of energy (elec or gas), with the best deal\n\n![image](https://media.github.schneider-electric.com/user/8672/files/2fdb187a-36b4-4cc5-8c83-e0c84ac0a64e)\n\n\n\n# Documentation\n    \n## How to sign up\n    \nThis is an internal API product. Please contact ecostruxure.openness@se.com for access.\n\n## Authentication guide\n\nDistrict Energy Thermal Load Forecasting API provides access Schneider Electric internal applications. Hence minimal API key authentication is enforced for the API.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n\n## Support\n\nContact the Schneider Electric Exchange support team at exchange.support@se.com and include:\n* Endpoint URL\n* Request/Response\n* Any additional information like Screenshots, Postman collections.\n\n---\n\n\nContact Support:\n Name: Schneider Electric\n Email: exchange.support@se.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34682654"
	},
	"item": [
		{
			"name": "raw",
			"item": [
				{
					"name": "{tenantId}",
					"item": [
						{
							"name": "Send Raw Data",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  },\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/raw/:tenantId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raw",
										":tenantId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Send Raw Data"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  },\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/raw/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"raw",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Count\": \"<integer>\"\n}"
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  },\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/raw/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"raw",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\",\n  \"invalidParams\": [\n    {\n      \"in\": \"query\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"in\": \"header\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  },\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/raw/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"raw",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  },\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/raw/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"raw",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "result",
			"item": [
				{
					"name": "{tenantId}",
					"item": [
						{
							"name": "Get Thermal Forecast",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/result/:tenantId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"result",
										":tenantId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Get Thermal Forecast"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/result/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"result",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\",\n    \"RunIteration\": \"<string>\"\n  },\n  {\n    \"TagName\": \"<string>\",\n    \"TagTime\": \"<string>\",\n    \"TagValue\": \"<float>\",\n    \"RunIteration\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/result/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"result",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/result/:tenantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"result",
												":tenantId"
											],
											"variable": [
												{
													"key": "tenantId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dev.api.exchange.se.app/ecostruxure/thermal-load-forecasting/v1"
		}
	]
}
