{
	"info": {
		"_postman_id": "056c7c2b-2c75-4fa4-bf5e-d8d5b4f03979",
		"name": "EcoStruxure™ Energy & Sustainability Scoring - Internal API",
		"description": "# Overview\n\nEcoStruxure™ Energy and Sustainability Scoring Internal API allows Schneider Electric applications to configure buildings that needs benchmarking by calculating performance scores using the building energy and sustainability data.\n\n## API overview and usage\n\nThis API enables the following operations:\n\n**Sites metadata**\n- Retrieve all sites belonging to which the connected user has access, along site metadata needed for performance scores calculation (e.g. gross area, building occupants, operating hours, etc)\n\n**Sites registration**\n- Allows the Schneider Electric application to register a site for calculating performance scores by sharing site timeseries details automatically.\n\n**Performance scores**\n* Read current and historical scores for a given site\n* Supported Types: Daily, Monthly, Average, Local Average \n* Supported Categories: Electricity, Fuel, Water, Waste, Human Experience\n\n# Documentation\n\n## How to sign up\n    \nThis is an internal API product. Please contact ecostruxure.openness@se.com for access.\n\n## Authentication guide\n\nThe API is meant for SE internal applications, application can choose one of following method to generate token and invoke API on behalf of a customer.\n\n### SE application integrated with cIAM\n\nIf the SE application is integrated with cIAM, application will already have access to cIAM id_token. SE application can exchange this id_token for API access token using `Exchange cIAM id_token` operation. CURL example below. This way the token generated is associated with the cIAM identity, the consent provided by the user will be stored against the cIAM identity.\n\n```shell\ncurl -X POST 'https://api.exchange.se.com/ecostruxure/v1/oauth/token' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'id_token=base64encodedidtokenfromciam' \\\n--data-urlencode 'grant_type=id_token' \\\n--data-urlencode 'client_id=abcdeff' \\\n--data-urlencode 'client_secret=******'\n```\n\n### SE application not integrated with cIAM\n\nIf the SE application is not integrated with cIAM, application can generate an access token using `Impersonate an user` operation. CURL example below. This way the token generated is associated with the cIAM identity, the consent provided by the user will be stored against the cIAM identity.\n\n```shell\ncurl -X POST 'https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token' \\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'email=john.doe@yopmail.com' \\\n--data-urlencode 'grant_type=user_token' \\\n--data-urlencode 'client_id=abcdeff' \\\n--data-urlencode 'client_secret=******'\n```\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Operations and Resource Model\n\n![Operations and Resource Model diagram](https://raw.githubusercontent.com/ecostruxure-openapi/public-images/main/energy-sustainability-scoring/open-esx-energy-scoring.png \"Operations and Resource Model diagram\")\n\n## Support\n\nContact our Exchange support team at exchange.support@se.com and include,\n\n    - Endpoint URL\n    - Request/Response of the URL\n    - Any additional information like Screenshots, Postman collections\n\nGet help from the community [here](https://community.se.com/t5/Green-Building-Scoring-and/bd-p/green-building-certification)\n\n---",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34682654"
	},
	"item": [
		{
			"name": "oauth-impersonate",
			"item": [
				{
					"name": "token",
					"item": [
						{
							"name": "Generates Access Token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "user_token",
											"description": "(Required) grant type of the token"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) consumer key of the API product"
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": "(Required) consumer secret of the API product"
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "(Required) email id of the user"
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "scope of the API resource. separate with space if more than one scope is requested"
										},
										{
											"key": "federatedId",
											"value": "<string>",
											"description": "unique user identifier in ciam"
										},
										{
											"key": "companyFederationId",
											"value": "<string>",
											"description": "unique company identifier ciam"
										}
									]
								},
								"url": {
									"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token",
									"protocol": "https",
									"host": [
										"api",
										"exchange",
										"se",
										"com"
									],
									"path": [
										"ecostruxure",
										"v1",
										"oauth-impersonate",
										"token"
									]
								},
								"description": "Oauth Impersonation is a security schema that is used by internal systems or applications of Schneider Electric which do not use CIAM as an identity provider for authenticating the users to access data.This is a custom-built security schema which uses the combination of apiKey and client credentials grant in order to issue the access token."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "user_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) email id of the user"
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												},
												{
													"key": "federatedId",
													"value": "<string>",
													"description": "unique user identifier in ciam"
												},
												{
													"key": "companyFederationId",
													"value": "<string>",
													"description": "unique company identifier ciam"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth-impersonate/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth-impersonate",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "oauth",
			"item": [
				{
					"name": "token",
					"item": [
						{
							"name": "Exchange cIAM id_token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "id_token",
											"description": "(Required) grant type of the token"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) consumer key of the API product"
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": "(Required) consumer secret of the API product"
										},
										{
											"key": "id_token",
											"value": "<string>",
											"description": "(Required) Base64 encoded CIAM ID token."
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "scope of the API resource. separate with space if more than one scope is requested"
										}
									]
								},
								"url": {
									"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth/token",
									"protocol": "https",
									"host": [
										"api",
										"exchange",
										"se",
										"com"
									],
									"path": [
										"ecostruxure",
										"v1",
										"oauth",
										"token"
									]
								},
								"description": "OAuth id_token grant type is a security schema that is used by internal systems or applications of Schneider Electric to exchange CIAM id_token for API access token."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth",
												"token"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "id_token",
													"description": "(Required) grant type of the token"
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) consumer key of the API product"
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) consumer secret of the API product"
												},
												{
													"key": "id_token",
													"value": "<string>",
													"description": "(Required) Base64 encoded CIAM ID token."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "scope of the API resource. separate with space if more than one scope is requested"
												}
											]
										},
										"url": {
											"raw": "https://api.exchange.se.com/ecostruxure/v1/oauth/token",
											"protocol": "https",
											"host": [
												"api",
												"exchange",
												"se",
												"com"
											],
											"path": [
												"ecostruxure",
												"v1",
												"oauth",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "sites",
			"item": [
				{
					"name": "{site-id}",
					"item": [
						{
							"name": "performance-scores",
							"item": [
								{
									"name": "Get Performance Score",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:site-id/performance-scores?type=average&type=localAverage&category=energy&category=reEntry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":site-id",
												"performance-scores"
											],
											"query": [
												{
													"key": "type",
													"value": "average"
												},
												{
													"key": "type",
													"value": "localAverage"
												},
												{
													"key": "category",
													"value": "energy"
												},
												{
													"key": "category",
													"value": "reEntry"
												}
											],
											"variable": [
												{
													"key": "site-id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieve all performance scores for a given site"
									},
									"response": [
										{
											"name": "Found Scores",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/performance-scores?type=localAverage&category=reEntry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"performance-scores"
													],
													"query": [
														{
															"key": "type",
															"value": "localAverage"
														},
														{
															"key": "category",
															"value": "reEntry"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"date\": \"<date>\",\n    \"score\": \"<number>\",\n    \"type\": \"daily\",\n    \"category\": \"energy\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"date\": \"<date>\",\n    \"score\": \"<number>\",\n    \"type\": \"average\",\n    \"category\": \"reEntry\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/performance-scores?type=localAverage&category=reEntry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"performance-scores"
													],
													"query": [
														{
															"key": "type",
															"value": "localAverage"
														},
														{
															"key": "category",
															"value": "reEntry"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Site Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/performance-scores?type=localAverage&category=reEntry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"performance-scores"
													],
													"query": [
														{
															"key": "type",
															"value": "localAverage"
														},
														{
															"key": "category",
															"value": "reEntry"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/performance-scores?type=localAverage&category=reEntry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"performance-scores"
													],
													"query": [
														{
															"key": "type",
															"value": "localAverage"
														},
														{
															"key": "category",
															"value": "reEntry"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "scoring-requests",
							"item": [
								{
									"name": "Create Scoring Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:site-id/scoring-requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":site-id",
												"scoring-requests"
											],
											"variable": [
												{
													"key": "site-id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "User select a site for scoring and thus automatically share timeseries related information to calculate scores"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"status\": \"PENDING\",\n  \"detail\": \"<string>\",\n  \"createdAt\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Scoring Request Status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:site-id/scoring-requests?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":site-id",
												"scoring-requests"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "site-id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Allows end user to check the status of the site configured for performance scoring."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"status\": \"REJECTED\",\n    \"detail\": \"<string>\",\n    \"createdAt\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"status\": \"CONFIGURED\",\n    \"detail\": \"<string>\",\n    \"createdAt\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:site-id/scoring-requests?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":site-id",
														"scoring-requests"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "site-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Fetch sites",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sites"
							]
						},
						"description": "Retrieve all sites and related metadata"
					},
					"response": [
						{
							"name": "Found Sites",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"sourceSystemId\": \"<integer>\",\n    \"metadata\": {\n      \"grossArea\": \"<integer>\",\n      \"buildingOccupants\": \"<integer>\",\n      \"daysPerWeekWithVisitors\": \"<integer>\",\n      \"numberOfVisitorsPerDay\": \"<integer>\",\n      \"visitDuration\": \"<double>\",\n      \"weeklyOperatingHours\": \"<integer>\"\n    },\n    \"postalAddress\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"sourceSystemId\": \"<integer>\",\n    \"metadata\": {\n      \"grossArea\": \"<integer>\",\n      \"buildingOccupants\": \"<integer>\",\n      \"daysPerWeekWithVisitors\": \"<integer>\",\n      \"numberOfVisitorsPerDay\": \"<integer>\",\n      \"visitDuration\": \"<double>\",\n      \"weeklyOperatingHours\": \"<integer>\"\n    },\n    \"postalAddress\": {\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"countryIsoCode\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"coordinates\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"elevation\": \"<number>\"\n      }\n    }\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sites"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"status\": \"<number>\",\n  \"instance\": \"<string>\",\n  \"detail\": \"<string>\",\n  \"debugging\": \"<string>\",\n  \"invalid-params\": [\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"path\": \"<string>\",\n      \"name\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dev.api.exchange.se.app/ecostruxure/user/scoring/v1"
		}
	]
}
